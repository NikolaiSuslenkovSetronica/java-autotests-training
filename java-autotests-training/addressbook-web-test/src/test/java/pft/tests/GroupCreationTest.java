package pft.tests;// Generated by Selenium IDE

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import pft.model.GroupData;
import pft.model.Groups;
import java.io.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;

public class GroupCreationTest extends TestBase {

  @DataProvider
  public Iterator<Object[]> validGroups() throws IOException {
    List<Object[]> list = new ArrayList<>();
    BufferedReader reader = new BufferedReader(new FileReader("src/test/resources/groups.csv"));
    String line = reader.readLine();
    while (line != null) {
      String[] split = line.split(";");
      list.add(new Object[]{new GroupData(null, split[0], split[1], split [2])});
      line = reader.readLine();
    }
    return list.iterator();
  }

  @Test(dataProvider = "validGroups")
  public void testGroupCreation(GroupData group) {
    app.goTo().groupPage();
    Groups before = app.group().getAll();
    app.group().create(group);
    assertThat(app.group().count(), equalTo(before.size() + 1));
    Groups after = app.group().getAll();
    int newElementId = after.stream().mapToInt((g) -> g.id()).max().getAsInt();
    assertThat(after, equalTo(before.withAdded(new GroupData(newElementId, group.name(), group.header(), group.footer()))));
  }

  @Test (enabled = false)
  public void testBadGroupCreation() {
    app.goTo().groupPage();
    Groups before = app.group().getAll();
    app.group().create(new GroupData(null,"group'", "h5", "f5"));
    assertThat(app.group().count(), equalTo(before.size()));
    Groups after = app.group().getAll();
    assertThat(after, equalTo(before));
  }

}
