package pft.tests;// Generated by Selenium IDE

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import pft.model.GroupData;
import pft.model.Groups;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;

public class GroupCreationTest extends TestBase {

  @DataProvider
  public Iterator<Object[]> validGroups() {
    List<Object[]> list = new ArrayList<>();
    list.add(new Object[] {new GroupData(null, "group1", "header1", "footer1")});
    list.add(new Object[] {new GroupData(null, "group2", "header2", "footer2")});
    list.add(new Object[] {new GroupData(null, "group3", "header3", "footer3")});
    return list.iterator();

  }

  @Test(dataProvider = "validGroups")
  public void testGroupCreation(GroupData group) {
    app.goTo().groupPage();
    Groups before = app.group().getAll();
    app.group().create(group);
    assertThat(app.group().count(), equalTo(before.size() + 1));
    Groups after = app.group().getAll();
    int newElementId = after.stream().mapToInt((g) -> g.id()).max().getAsInt();
    assertThat(after, equalTo(before.withAdded(new GroupData(newElementId, group.name(), group.header(), group.footer()))));
  }

  @Test
  public void testBadGroupCreation() {
    app.goTo().groupPage();
    Groups before = app.group().getAll();
    app.group().create(new GroupData(null,"group'", "h5", "f5"));
    assertThat(app.group().count(), equalTo(before.size()));
    Groups after = app.group().getAll();
    assertThat(after, equalTo(before));
  }

}
